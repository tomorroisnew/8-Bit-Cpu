$date
	Sun Dec 10 20:34:02 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_tb $end
$scope module cpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # zero_flag $end
$var wire 4 $ opCode [3:0] $end
$var wire 1 % Reg_const4 $end
$var wire 1 & Reg_Imm $end
$var wire 2 ' Reg_4_PC [1:0] $end
$var wire 1 ( RegWrite_Enable $end
$var wire 1 ) RA_Enable $end
$var wire 8 * RADebugCPU [7:0] $end
$var wire 8 + PCdebugCPU [7:0] $end
$var wire 2 , PC_RA_ALU_REG [1:0] $end
$var wire 1 - PC_Enable $end
$var wire 1 . MemWrite_Enable $end
$var wire 2 / Alu_Move_Mem [1:0] $end
$var wire 3 0 ALUOP [2:0] $end
$scope module ctrl $end
$var wire 1 # zero_flag $end
$var wire 4 1 opCode [3:0] $end
$var reg 3 2 ALUOP [2:0] $end
$var reg 2 3 Alu_Move_Mem [1:0] $end
$var reg 1 . MemWrite_Enable $end
$var reg 1 - PC_Enable $end
$var reg 2 4 PC_RA_ALU_REG [1:0] $end
$var reg 1 ) RA_Enable $end
$var reg 1 ( RegWrite_Enable $end
$var reg 2 5 Reg_4_PC [1:0] $end
$var reg 1 & Reg_Imm $end
$var reg 1 % Reg_const4 $end
$upscope $end
$scope module dp $end
$var wire 3 6 ALUOP [2:0] $end
$var wire 2 7 Alu_Move_Mem [1:0] $end
$var wire 1 . MemWrite_Enable $end
$var wire 1 - PC_Enable $end
$var wire 2 8 PC_RA_ALU_REG [1:0] $end
$var wire 1 ) RA_Enable $end
$var wire 1 ( RegWrite_Enable $end
$var wire 2 9 Reg_4_PC [1:0] $end
$var wire 1 & Reg_Imm $end
$var wire 1 % Reg_const4 $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # zero_flag $end
$var wire 2 : toRd2 [1:0] $end
$var wire 8 ; result [7:0] $end
$var wire 8 < pc_plus_one [7:0] $end
$var wire 4 = opCode [3:0] $end
$var wire 8 > instruction [7:0] $end
$var wire 4 ? imm [3:0] $end
$var wire 8 @ RAval [7:0] $end
$var wire 8 A PCval [7:0] $end
$var wire 8 B Memout [7:0] $end
$var wire 8 C D2 [7:0] $end
$var wire 8 D D1 [7:0] $end
$var reg 8 E IN1 [7:0] $end
$var reg 8 F IN2 [7:0] $end
$var reg 8 G PCdebug [7:0] $end
$var reg 8 H RADebug [7:0] $end
$var reg 8 I toPC [7:0] $end
$var reg 2 J toRd1 [1:0] $end
$var reg 8 K toWriteData [7:0] $end
$scope module Inst $end
$var wire 8 L Address [7:0] $end
$var reg 8 M Instruction [7:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 N i [31:0] $end
$upscope $end
$upscope $end
$scope module PC $end
$var wire 8 O In [7:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 - writeEnable $end
$var reg 8 P Data [7:0] $end
$var reg 8 Q Out [7:0] $end
$upscope $end
$scope module RA $end
$var wire 8 R In [7:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 ) writeEnable $end
$var reg 8 S Data [7:0] $end
$var reg 8 T Out [7:0] $end
$upscope $end
$scope module RegFile $end
$var wire 1 ( RegWrite_Enable $end
$var wire 2 U RegisterData1 [1:0] $end
$var wire 2 V RegisterData2 [1:0] $end
$var wire 8 W WriteData [7:0] $end
$var wire 2 X WriteRegister [1:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var reg 8 Y Data1 [7:0] $end
$var reg 8 Z Data2 [7:0] $end
$var integer 32 [ i [31:0] $end
$upscope $end
$scope module alu $end
$var wire 8 \ input1 [7:0] $end
$var wire 8 ] input2 [7:0] $end
$var wire 3 ^ op [2:0] $end
$var reg 8 _ result [7:0] $end
$var reg 1 # zero $end
$upscope $end
$scope module memory $end
$var wire 8 ` Address [7:0] $end
$var wire 8 a WriteData [7:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 . writeEnable $end
$var reg 8 b Data [7:0] $end
$var integer 32 c i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module CPU_tb $end
$scope module cpu $end
$scope module dp $end
$scope module memory $end
$var reg 8 d \memory[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx d
bx c
bx b
bx a
bx `
b0 _
b0 ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
b0 W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
b100000000 N
bx M
bx L
b0 K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
b0 ;
bx :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
bx 1
b0 0
b0 /
0.
1-
b0 ,
bx +
bx *
0)
0(
b0 '
0&
0%
bx $
1#
x"
x!
$end
#15
0"
0!
#30
b0 B
b0 b
b0 E
b0 \
b100 F
b100 ]
b10 0
b10 2
b10 6
b10 ^
b1 '
b1 5
b1 9
1%
1(
1&
b0 ?
b0 C
b0 Z
b0 `
b0 D
b0 Y
b0 a
b1 $
b1 1
b1 =
b0 :
b0 V
b11 J
b11 U
b11 X
b10000 >
b10000 M
b1 I
b1 O
b0 *
b0 H
b0 +
b0 G
b1 <
b1 R
b0 A
b0 L
b0 Q
b0 @
b0 T
b0 P
b0 S
b0 d
b100 [
b100000000 c
1"
1!
#45
0"
0!
#60
b1 K
b1 W
0#
b1 ;
b1 _
b1 E
b1 \
b0 F
b0 ]
b0 '
b0 5
b0 9
b101 0
b101 2
b101 6
b101 ^
b1 ?
b10 $
b10 1
b10 =
b1 :
b1 V
b10 I
b10 O
b1 +
b1 G
b100001 >
b100001 M
b10 <
b10 R
b1 A
b1 L
b1 Q
b1 P
1!
#75
0!
#90
b0 J
b0 U
b0 X
1#
b0 ;
b0 _
0%
0&
b0 0
b0 2
b0 6
b0 ^
b1 /
b1 3
b1 7
b11 ?
b1 C
b1 Z
b1 `
b101 $
b101 1
b101 =
b11 :
b11 V
b11 I
b11 O
b10 +
b10 G
b1010011 >
b1010011 M
b0 F
b0 ]
b11 <
b11 R
b10 A
b10 L
b10 Q
b0 D
b0 Y
b0 a
b10 P
1!
#105
0!
#120
b0 K
b0 W
b11 J
b11 U
b11 X
b0 E
b0 \
b0 /
b0 3
b0 7
b10 0
b10 2
b10 6
b10 ^
b1 '
b1 5
b1 9
1%
1&
b0 ?
b1 $
b1 1
b1 =
b0 :
b0 V
b100 I
b100 O
b100 F
b100 ]
b11 +
b11 G
b10000 >
b10000 M
b1 D
b1 Y
b1 a
b100 <
b100 R
b11 A
b11 L
b11 Q
b11 P
1!
#135
0!
#150
b1110 K
b1110 W
0#
b1110 ;
b1110 _
b1110 E
b1110 \
b0 F
b0 ]
b0 '
b0 5
b0 9
b101 0
b101 2
b101 6
b101 ^
b1110 ?
b0 C
b0 Z
b0 `
b10 $
b10 1
b10 =
b10 :
b10 V
b101 I
b101 O
b100 +
b100 G
b101110 >
b101110 M
b101 <
b101 R
b100 A
b100 L
b100 Q
b0 D
b0 Y
b0 a
b100 P
1!
#165
0!
#180
b0 K
b0 W
b0 J
b0 U
b0 X
1#
b0 ;
b0 _
0%
0(
0&
b0 0
b0 2
b0 6
b0 ^
1)
b11 ,
b11 4
b11 8
b11 ?
b1110 C
b1110 Z
b1110 `
b1011 $
b1011 1
b1011 =
b11 :
b11 V
b1110 I
b1110 O
b1 F
b1 ]
b101 +
b101 G
b10110011 >
b10110011 M
b1 D
b1 Y
b1 a
b110 <
b110 R
b101 A
b101 L
b101 Q
b101 P
1!
#195
0!
#210
b1111 K
b1111 W
0#
b1111 ;
b1111 _
b1111 I
b1111 O
b101 E
b101 \
b1110 F
b1110 ]
0)
b0 ,
b0 4
b0 8
b101 0
b101 2
b101 6
b101 ^
1%
1(
1&
b101 ?
b0 C
b0 Z
b0 `
b1110 D
b1110 Y
b1110 a
b10 $
b10 1
b10 =
b1 :
b1 V
b11 J
b11 U
b11 X
b100101 >
b100101 M
b110 *
b110 H
b1110 +
b1110 G
b1111 <
b1111 R
b1110 A
b1110 L
b1110 Q
b110 @
b110 T
b1110 P
b110 S
1!
#225
0!
#240
b1 J
b1 U
b1 X
1#
b0 ;
b0 _
b1111 E
b1111 \
0%
0&
b0 0
b0 2
b0 6
b0 ^
b1 /
b1 3
b1 7
b111 ?
b1111 C
b1111 Z
b1111 `
b101 $
b101 1
b101 =
b11 :
b11 V
b10000 I
b10000 O
b0 F
b0 ]
b1111 +
b1111 G
b1010111 >
b1010111 M
b0 D
b0 Y
b0 a
b10000 <
b10000 R
b1111 A
b1111 L
b1111 Q
b1111 P
1!
#255
0!
#270
b0 K
b0 W
b1 E
b1 \
0(
b0 /
b0 3
b0 7
b1 ,
b1 4
b1 8
b0 ?
b1 C
b1 Z
b1 `
b1101 $
b1101 1
b1101 =
b0 :
b0 V
b0 J
b0 U
b0 X
b110 I
b110 O
b10000 +
b10000 G
b11010000 >
b11010000 M
b1 F
b1 ]
b10001 <
b10001 R
b10000 A
b10000 L
b10000 Q
b1 D
b1 Y
b1 a
b10000 P
1!
#285
0!
#300
b10000 K
b10000 W
0#
b10000 ;
b10000 _
b111 I
b111 O
b1111 E
b1111 \
b0 ,
b0 4
b0 8
b1 0
b1 2
b1 6
b1 ^
1(
b1 ?
b1111 C
b1111 Z
b1111 `
b110 $
b110 1
b110 =
b1 :
b1 V
b110 +
b110 G
b1100001 >
b1100001 M
b111 <
b111 R
b110 A
b110 L
b110 Q
b110 P
1!
#315
0!
#330
1#
b11 J
b11 U
b11 X
b0 E
b0 \
b10 0
b10 2
b10 6
b10 ^
b1 '
b1 5
b1 9
1%
1&
b0 ?
b10000 C
b10000 Z
b10000 `
b0 K
b0 W
b1 $
b1 1
b1 =
b0 :
b0 V
b0 ;
b0 _
b1000 I
b1000 O
b111 +
b111 G
b10000 >
b10000 M
b100 F
b100 ]
b1000 <
b1000 R
b111 A
b111 L
b111 Q
b1111 D
b1111 Y
b1111 a
b111 P
1!
#345
0!
#360
b0 K
b0 W
b0 F
b0 ]
1#
b0 ;
b0 _
b0 '
b0 5
b0 9
b101 0
b101 2
b101 6
b101 ^
b10 $
b10 1
b10 =
b1001 I
b1001 O
b1000 +
b1000 G
b100000 >
b100000 M
b0 D
b0 Y
b0 a
b1001 <
b1001 R
b1000 A
b1000 L
b1000 Q
b1000 P
1!
#375
0!
#390
b10000 F
b10000 ]
b10000 D
b10000 Y
b10000 a
b0 J
b0 U
b0 X
0%
0(
0&
b0 0
b0 2
b0 6
b0 ^
1.
b11 ?
b0 C
b0 Z
b0 `
b100 $
b100 1
b100 =
b11 :
b11 V
b1010 I
b1010 O
b1001 +
b1001 G
b1000011 >
b1000011 M
b1010 <
b1010 R
b1001 A
b1001 L
b1001 Q
b1001 P
1!
#405
0!
#420
b10000 E
b10000 \
0-
0.
b0 ?
b10000 C
b10000 Z
b10000 `
b0 $
b0 1
b0 =
b0 :
b0 V
b1011 I
b1011 O
b1010 +
b1010 G
b0 >
b0 M
b0 B
b0 b
b1011 <
b1011 R
b1010 A
b1010 L
b1010 Q
b10000 d
b1010 P
1!
#435
0!
#450
1!
#465
0!
#480
1!
#495
0!
#510
1!
#525
0!
#540
1!
#555
0!
#570
1!
#585
0!
#600
1!
#615
0!
#630
1!
#645
0!
#660
1!
#675
0!
#690
1!
#705
0!
#720
1!
#735
0!
#750
1!
#765
0!
