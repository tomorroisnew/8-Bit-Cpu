$date
	Sun Dec 10 02:54:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Control_Unit_tb $end
$var wire 1 ! Reg_const4 $end
$var wire 1 " Reg_Imm $end
$var wire 2 # Reg_4_PC [1:0] $end
$var wire 1 $ RegWrite_Enable $end
$var wire 1 % RA_Enable $end
$var wire 2 & PC_RA_ALU_REG [1:0] $end
$var wire 1 ' PC_Enable $end
$var wire 1 ( MemWrite_Enable $end
$var wire 2 ) Alu_Move_Mem [1:0] $end
$var wire 3 * ALUOP [2:0] $end
$var reg 4 + opCode [3:0] $end
$var reg 1 , zero_flag $end
$scope module Control_Unit_dut $end
$var wire 4 - opCode [3:0] $end
$var wire 1 , zero_flag $end
$var reg 3 . ALUOP [2:0] $end
$var reg 2 / Alu_Move_Mem [1:0] $end
$var reg 1 ( MemWrite_Enable $end
$var reg 1 ' PC_Enable $end
$var reg 2 0 PC_RA_ALU_REG [1:0] $end
$var reg 1 % RA_Enable $end
$var reg 1 $ RegWrite_Enable $end
$var reg 2 1 Reg_4_PC [1:0] $end
$var reg 1 " Reg_Imm $end
$var reg 1 ! Reg_const4 $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 1
b0 0
b0 /
b0 .
b0 -
1,
b0 +
b0 *
b0 )
0(
0'
b0 &
0%
0$
b0 #
0"
0!
$end
#30
b10 *
b10 .
b1 #
b1 1
1'
1!
1$
1"
b1 +
b1 -
#45
b0 #
b0 1
b101 *
b101 .
b10 +
b10 -
#60
0!
0"
b0 *
b0 .
b10 )
b10 /
b11 +
b11 -
#75
0$
b0 )
b0 /
1(
b100 +
b100 -
#90
0(
b1 )
b1 /
1$
b101 +
b101 -
#105
b0 )
b0 /
b1 *
b1 .
b110 +
b110 -
#120
b11 *
b11 .
b111 +
b111 -
#135
b100 *
b100 .
b1000 +
b1000 -
#150
b101 *
b101 .
b1001 +
b1001 -
#165
b110 *
b110 .
b1010 +
b1010 -
#180
0$
b0 *
b0 .
1%
b11 &
b11 0
b1011 +
b1011 -
#195
b1100 +
b1100 -
#210
0%
b1 &
b1 0
b1101 +
b1101 -
#225
b1 *
b1 .
b10 #
b10 1
b10 &
b10 0
1"
b1110 +
b1110 -
#240
b1111 +
b1111 -
